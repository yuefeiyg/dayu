<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blcultra.dao.TaskInfoMapper" >
  <resultMap id="BaseResultMap" type="com.blcultra.model.TaskInfo" >
    <id column="taskid" property="taskid" jdbcType="VARCHAR" />
    <result column="classifycode" property="classifycode" jdbcType="VARCHAR" />
    <result column="tasktitle" property="tasktitle" jdbcType="VARCHAR" />
    <result column="taskdesc" property="taskdesc" jdbcType="VARCHAR" />
    <result column="templateid" property="templateid" jdbcType="VARCHAR" />
    <result column="createuserid" property="createuserid" jdbcType="VARCHAR" />
    <result column="performerid" property="performerid" jdbcType="VARCHAR" />
    <result column="prevperformerid" property="prevperformerid" jdbcType="VARCHAR" />
    <result column="tasktype" property="tasktype" jdbcType="VARCHAR" />
    <result column="projectid" property="projectid" jdbcType="VARCHAR" />
    <result column="taskownerid" property="taskownerid" jdbcType="VARCHAR" />
    <result column="taskstate" property="taskstate" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="VARCHAR" />
    <result column="updatetime" property="updatetime" jdbcType="VARCHAR" />
    <result column="receivetime" property="receivetime" jdbcType="VARCHAR" />
    <result column="finishdeadline" property="finishdeadline" jdbcType="VARCHAR" />
    <result column="finishtime" property="finishtime" jdbcType="VARCHAR" />
    <result column="costtime" property="costtime" jdbcType="VARCHAR" />
    <result column="begintime" property="begintime" jdbcType="VARCHAR" />
    <result column="pausetime" property="pausetime" jdbcType="VARCHAR" />
    <result column="taskdatanumber" property="taskdatanumber" jdbcType="VARCHAR" />
    <result column="totalwords" property="totalwords" jdbcType="VARCHAR" />
    <result column="processedwords" property="processedwords" jdbcType="VARCHAR" />
    <result column="callbacktimes" property="callbacktimes" jdbcType="VARCHAR" />
    <result column="audittimes" property="audittimes" jdbcType="VARCHAR" />
    <result column="resultdesc" property="resultdesc" jdbcType="VARCHAR" />
    <result column="resultdataset" property="resultdataset" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="VARCHAR" />
    <result column="comments" property="comments" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="VARCHAR" />
    <result column="note" property="note" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    taskid, classifycode, tasktitle, taskdesc, templateid, createuserid, performerid, 
    prevperformerid, tasktype, projectid, taskownerid, taskstate, createtime, updatetime, 
    receivetime, finishdeadline, finishtime, costtime, begintime, pausetime, taskdatanumber, 
    totalwords, processedwords, callbacktimes, audittimes, resultdesc, resultdataset, 
    score, comments,version,note
  </sql>
<!--根据项目id查询项目下的任务信息-->
  <select id="getTaskInfoByProjectId" parameterType="java.lang.String" resultType="map">
    SELECT t.taskid,t.tasktitle,t.projectid,p.projectname
    FROM task_info t
    INNER JOIN project_info p ON p.projectid=t.projectid
    WHERE t.projectid =#{projectid,jdbcType=VARCHAR}
    LIMIT 1
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from task_info
    where taskid = #{taskid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from task_info
    where taskid = #{taskid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.blcultra.model.TaskInfo" >
    insert into task_info (taskid, classifycode, tasktitle, 
      taskdesc, templateid, createuserid, 
      performerid, prevperformerid, tasktype, 
      projectid, taskownerid, taskstate, 
      createtime, updatetime, receivetime, 
      finishdeadline, finishtime, costtime, 
      begintime, pausetime, taskdatanumber, 
      totalwords, processedwords, callbacktimes, 
      audittimes, resultdesc, resultdataset, 
      score, comments, version,note
      )
    values (#{taskid,jdbcType=VARCHAR}, #{classifycode,jdbcType=VARCHAR}, #{tasktitle,jdbcType=VARCHAR}, 
      #{taskdesc,jdbcType=VARCHAR}, #{templateid,jdbcType=VARCHAR}, #{createuserid,jdbcType=VARCHAR}, 
      #{performerid,jdbcType=VARCHAR}, #{prevperformerid,jdbcType=VARCHAR}, #{tasktype,jdbcType=VARCHAR}, 
      #{projectid,jdbcType=VARCHAR}, #{taskownerid,jdbcType=VARCHAR}, #{taskstate,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=VARCHAR}, #{updatetime,jdbcType=VARCHAR}, #{receivetime,jdbcType=VARCHAR}, 
      #{finishdeadline,jdbcType=VARCHAR}, #{finishtime,jdbcType=VARCHAR}, #{costtime,jdbcType=VARCHAR}, 
      #{begintime,jdbcType=VARCHAR}, #{pausetime,jdbcType=VARCHAR}, #{taskdatanumber,jdbcType=VARCHAR}, 
      #{totalwords,jdbcType=VARCHAR}, #{processedwords,jdbcType=VARCHAR}, #{callbacktimes,jdbcType=VARCHAR}, 
      #{audittimes,jdbcType=VARCHAR}, #{resultdesc,jdbcType=VARCHAR}, #{resultdataset,jdbcType=VARCHAR}, 
      #{score,jdbcType=VARCHAR}, #{comments,jdbcType=VARCHAR},#{version,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.blcultra.model.TaskInfo" >
    insert into task_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="taskid != null" >
        taskid,
      </if>
      <if test="classifycode != null" >
        classifycode,
      </if>
      <if test="tasktitle != null" >
        tasktitle,
      </if>
      <if test="taskdesc != null" >
        taskdesc,
      </if>
      <if test="templateid != null" >
        templateid,
      </if>
      <if test="createuserid != null" >
        createuserid,
      </if>
      <if test="performerid != null" >
        performerid,
      </if>
      <if test="prevperformerid != null" >
        prevperformerid,
      </if>
      <if test="tasktype != null" >
        tasktype,
      </if>
      <if test="projectid != null" >
        projectid,
      </if>
      <if test="taskownerid != null" >
        taskownerid,
      </if>
      <if test="taskstate != null" >
        taskstate,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="receivetime != null" >
        receivetime,
      </if>
      <if test="finishdeadline != null" >
        finishdeadline,
      </if>
      <if test="finishtime != null" >
        finishtime,
      </if>
      <if test="costtime != null" >
        costtime,
      </if>
      <if test="begintime != null" >
        begintime,
      </if>
      <if test="pausetime != null" >
        pausetime,
      </if>
      <if test="taskdatanumber != null" >
        taskdatanumber,
      </if>
      <if test="totalwords != null" >
        totalwords,
      </if>
      <if test="processedwords != null" >
        processedwords,
      </if>
      <if test="callbacktimes != null" >
        callbacktimes,
      </if>
      <if test="audittimes != null" >
        audittimes,
      </if>
      <if test="resultdesc != null" >
        resultdesc,
      </if>
      <if test="resultdataset != null" >
        resultdataset,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="comments != null" >
        comments,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="note != null" >
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="taskid != null" >
        #{taskid,jdbcType=VARCHAR},
      </if>
      <if test="classifycode != null" >
        #{classifycode,jdbcType=VARCHAR},
      </if>
      <if test="tasktitle != null" >
        #{tasktitle,jdbcType=VARCHAR},
      </if>
      <if test="taskdesc != null" >
        #{taskdesc,jdbcType=VARCHAR},
      </if>
      <if test="templateid != null" >
        #{templateid,jdbcType=VARCHAR},
      </if>
      <if test="createuserid != null" >
        #{createuserid,jdbcType=VARCHAR},
      </if>
      <if test="performerid != null" >
        #{performerid,jdbcType=VARCHAR},
      </if>
      <if test="prevperformerid != null" >
        #{prevperformerid,jdbcType=VARCHAR},
      </if>
      <if test="tasktype != null" >
        #{tasktype,jdbcType=VARCHAR},
      </if>
      <if test="projectid != null" >
        #{projectid,jdbcType=VARCHAR},
      </if>
      <if test="taskownerid != null" >
        #{taskownerid,jdbcType=VARCHAR},
      </if>
      <if test="taskstate != null" >
        #{taskstate,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=VARCHAR},
      </if>
      <if test="receivetime != null" >
        #{receivetime,jdbcType=VARCHAR},
      </if>
      <if test="finishdeadline != null" >
        #{finishdeadline,jdbcType=VARCHAR},
      </if>
      <if test="finishtime != null" >
        #{finishtime,jdbcType=VARCHAR},
      </if>
      <if test="costtime != null" >
        #{costtime,jdbcType=VARCHAR},
      </if>
      <if test="begintime != null" >
        #{begintime,jdbcType=VARCHAR},
      </if>
      <if test="pausetime != null" >
        #{pausetime,jdbcType=VARCHAR},
      </if>
      <if test="taskdatanumber != null" >
        #{taskdatanumber,jdbcType=VARCHAR},
      </if>
      <if test="totalwords != null" >
        #{totalwords,jdbcType=VARCHAR},
      </if>
      <if test="processedwords != null" >
        #{processedwords,jdbcType=VARCHAR},
      </if>
      <if test="callbacktimes != null" >
        #{callbacktimes,jdbcType=VARCHAR},
      </if>
      <if test="audittimes != null" >
        #{audittimes,jdbcType=VARCHAR},
      </if>
      <if test="resultdesc != null" >
        #{resultdesc,jdbcType=VARCHAR},
      </if>
      <if test="resultdataset != null" >
        #{resultdataset,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=VARCHAR},
      </if>
      <if test="comments != null" >
        #{comments,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blcultra.model.TaskInfo" >
    update task_info
    <set >
      <if test="classifycode != null" >
        classifycode = #{classifycode,jdbcType=VARCHAR},
      </if>
      <if test="tasktitle != null" >
        tasktitle = #{tasktitle,jdbcType=VARCHAR},
      </if>
      <if test="taskdesc != null" >
        taskdesc = #{taskdesc,jdbcType=VARCHAR},
      </if>
      <if test="templateid != null" >
        templateid = #{templateid,jdbcType=VARCHAR},
      </if>
      <if test="createuserid != null" >
        createuserid = #{createuserid,jdbcType=VARCHAR},
      </if>
      <if test="performerid != null" >
        performerid = #{performerid,jdbcType=VARCHAR},
      </if>
      <if test="prevperformerid != null" >
        prevperformerid = #{prevperformerid,jdbcType=VARCHAR},
      </if>
      <if test="tasktype != null" >
        tasktype = #{tasktype,jdbcType=VARCHAR},
      </if>
      <if test="projectid != null" >
        projectid = #{projectid,jdbcType=VARCHAR},
      </if>
      <if test="taskownerid != null" >
        taskownerid = #{taskownerid,jdbcType=VARCHAR},
      </if>
      <if test="taskstate != null" >
        taskstate = #{taskstate,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=VARCHAR},
      </if>
      <if test="receivetime != null" >
        receivetime = #{receivetime,jdbcType=VARCHAR},
      </if>
      <if test="finishdeadline != null" >
        finishdeadline = #{finishdeadline,jdbcType=VARCHAR},
      </if>
      <if test="finishtime != null" >
        finishtime = #{finishtime,jdbcType=VARCHAR},
      </if>
      <if test="costtime != null" >
        costtime = #{costtime,jdbcType=VARCHAR},
      </if>
      <if test="begintime != null" >
        begintime = #{begintime,jdbcType=VARCHAR},
      </if>
      <if test="pausetime != null" >
        pausetime = #{pausetime,jdbcType=VARCHAR},
      </if>
      <if test="taskdatanumber != null" >
        taskdatanumber = #{taskdatanumber,jdbcType=VARCHAR},
      </if>
      <if test="totalwords != null" >
        totalwords = #{totalwords,jdbcType=VARCHAR},
      </if>
      <if test="processedwords != null" >
        processedwords = #{processedwords,jdbcType=VARCHAR},
      </if>
      <if test="callbacktimes != null" >
        callbacktimes = #{callbacktimes,jdbcType=VARCHAR},
      </if>
      <if test="audittimes != null" >
        audittimes = #{audittimes,jdbcType=VARCHAR},
      </if>
      <if test="resultdesc != null" >
        resultdesc = #{resultdesc,jdbcType=VARCHAR},
      </if>
      <if test="resultdataset != null" >
        resultdataset = #{resultdataset,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=VARCHAR},
      </if>
      <if test="comments != null" >
        comments = #{comments,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where taskid = #{taskid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blcultra.model.TaskInfo" >
    update task_info
    set classifycode = #{classifycode,jdbcType=VARCHAR},
      tasktitle = #{tasktitle,jdbcType=VARCHAR},
      taskdesc = #{taskdesc,jdbcType=VARCHAR},
      templateid = #{templateid,jdbcType=VARCHAR},
      createuserid = #{createuserid,jdbcType=VARCHAR},
      performerid = #{performerid,jdbcType=VARCHAR},
      prevperformerid = #{prevperformerid,jdbcType=VARCHAR},
      tasktype = #{tasktype,jdbcType=VARCHAR},
      projectid = #{projectid,jdbcType=VARCHAR},
      taskownerid = #{taskownerid,jdbcType=VARCHAR},
      taskstate = #{taskstate,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=VARCHAR},
      updatetime = #{updatetime,jdbcType=VARCHAR},
      receivetime = #{receivetime,jdbcType=VARCHAR},
      finishdeadline = #{finishdeadline,jdbcType=VARCHAR},
      finishtime = #{finishtime,jdbcType=VARCHAR},
      costtime = #{costtime,jdbcType=VARCHAR},
      begintime = #{begintime,jdbcType=VARCHAR},
      pausetime = #{pausetime,jdbcType=VARCHAR},
      taskdatanumber = #{taskdatanumber,jdbcType=VARCHAR},
      totalwords = #{totalwords,jdbcType=VARCHAR},
      processedwords = #{processedwords,jdbcType=VARCHAR},
      callbacktimes = #{callbacktimes,jdbcType=VARCHAR},
      audittimes = #{audittimes,jdbcType=VARCHAR},
      resultdesc = #{resultdesc,jdbcType=VARCHAR},
      resultdataset = #{resultdataset,jdbcType=VARCHAR},
      score = #{score,jdbcType=VARCHAR},
      comments = #{comments,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR}
    where taskid = #{taskid,jdbcType=VARCHAR}
  </update>

  <sql id="publishedTask_List_if" >
    <if test="keyword != null and keyword != ''">
      and (
      t.tasktitle like concat("%",concat(#{keyword},"%")) or
      tu.username like concat("%",concat(#{keyword},"%")) or
      p.projectname like  concat("%",concat(#{keyword},"%")) or
      tasdic.dictDesc like  concat("%",concat(#{keyword},"%")) or
      td.dictDesc like  concat("%",concat(#{keyword},"%")) or
      t.taskdesc like  concat("%",concat(#{keyword},"%")) or
      t.comments like concat("%",concat(#{keyword},"%")) or
      p.note like concat("%",concat(#{keyword},"%")) or
      t.note like concat("%",concat(#{keyword},"%"))
      )
    </if>
    <if test="projectname != null and projectname != ''">
      and p.projectname like  concat("%",concat(#{projectname},"%"))
    </if>
    <if test="taskname != null and taskname != ''">
      and t.tasktitle like  concat("%",concat(#{taskname},"%"))
    </if>
    <if test="tasktype != null and tasktype != ''">
      and  t.classifycode = #{tasktype}
    </if>
    <if test="createuser != null and createuser != ''">
      and  tu.username like concat("%",concat(#{createuser},"%"))
    </if>
    <if test="performer != null and performer != ''">
      and  performer.username like concat("%",concat(#{performer},"%"))
    </if>
    <if test="taskstate != null and taskstate != ''">
      and   t.taskstate = #{taskstate}
    </if>
    <if test="pstarttime != null and pstarttime != '' and pendtime != null and pendtime != ''">
      and  t.createtime between #{pstarttime} and  #{pendtime}
    </if>
    <if test="pstarttime != null and pstarttime != '' and (pendtime == null or pendtime == '')">
      and  t.createtime <![CDATA[ >= ]]> #{pstarttime}
    </if>
    <if test="(pstarttime == null or pstarttime == '' ) and pendtime != null and pendtime != ''">
      and  t.createtime <![CDATA[ <= ]]>  #{pendtime}
    </if>
    <if test="fstarttime != null and fstarttime != '' and fendtime != null and fendtime != ''">
      and  t.finishdeadline between #{fstarttime} and  #{fendtime}
    </if>
    <if test="fstarttime != null and fstarttime != '' and (fendtime == null or fendtime == '')">
      and  t.finishdeadline <![CDATA[ >= ]]> #{fstarttime}
    </if>
    <if test="(fstarttime == null or fstarttime == '') and fendtime != null and fendtime != ''">
      and  t.finishdeadline <![CDATA[ <= ]]>  #{fendtime}
    </if>
  </sql>
  <!--获取已发布任务列表：状态：1 已发布  2已接受  3任务已提交未审核 4任务已审核未通过 5任务已审核已通过  6任务已结束-->
  <select id="getPublishedTaskList" parameterType="map" resultType="map" >
    SELECT t.* ,template.annotationtype,p.projectowner,p.projectName,td.dictDesc AS classifyName,tu.userName AS createUserName,
    tasdic.dictDesc AS taskStateName
    FROM task_info t
    LEFT JOIN annotation_template template ON t.templateid = template.templateid
    INNER JOIN project_info p ON t.projectId= p.projectId
    <if test="sysrole != 'admin'">
      INNER JOIN  project_user pu on pu.projectId  = t.projectId
    </if>
    LEFT JOIN task_dict td ON td.dictCode = t.classifycode
    LEFT JOIN `user` tu ON tu.userId=t.createUserId
    LEFT JOIN `user` performer ON performer.userId=t.performerId
    LEFT JOIN task_dict tasdic ON tasdic.dictCode = t.taskState
    where t.taskState = '002001'
    <if test="sysrole != 'admin'">
      and  pu.member = #{userId}
    </if>
    <include refid="publishedTask_List_if"></include>
    group by  t.taskId
    <if test="sysrole == 'manager'">
      union
        SELECT t.* ,template.annotationtype,p.projectowner,p.projectName,td.dictDesc AS classifyName,tu.userName AS createUserName,
        tasdic.dictDesc AS taskStateName
        FROM task_info t
        LEFT JOIN annotation_template template ON t.templateid = template.templateid
        INNER JOIN project_info p ON t.projectId= p.projectId
        LEFT JOIN task_dict td ON td.dictCode = t.classifycode
        LEFT JOIN `user` tu ON tu.userId=t.createUserId
        LEFT JOIN `user` performer ON performer.userId=t.performerId
        LEFT JOIN task_dict tasdic ON tasdic.dictCode = t.taskState
      where t.taskState = '002001' and (p.projectowner =#{userId}
          or  (p.projectId in (select  projectid from  project_his_owner where formerowner = #{performerid} ))
      )
      <include refid="publishedTask_List_if"></include>
    </if>
    ORDER BY createTime DESC
    <if test="queryStart != null and pageSize != null and pageSize !=0">
      limit #{queryStart}, #{pageSize}
    </if>
  </select>

  <select id="getPublishedTaskListCounts" parameterType="map" resultType="int" >
    <if test="sysrole == 'manager'">
        select count(1) from  (

              SELECT t.* ,p.projectowner,p.projectName,td.dictDesc AS classifyName,tu.userName AS createUserName,
              tasdic.dictDesc AS taskStateName
              FROM task_info t
              INNER JOIN project_info p ON t.projectId= p.projectId
              INNER JOIN  project_user pu on pu.projectId  = t.projectId
              LEFT JOIN task_dict td ON td.dictCode = t.classifycode
              LEFT JOIN `user` tu ON tu.userId=t.createUserId
              LEFT JOIN `user` performer ON performer.userId=t.performerId
              LEFT JOIN task_dict tasdic ON tasdic.dictCode = t.taskState
              where t.taskState = '002001'
              and  pu.member = #{userId}
              <include refid="publishedTask_List_if"></include>
              group by t.taskid
              union
              SELECT t.* ,p.projectowner,p.projectName,td.dictDesc AS classifyName,tu.userName AS createUserName,
              tasdic.dictDesc AS taskStateName
              FROM task_info t
              INNER JOIN project_info p ON t.projectId= p.projectId
              LEFT JOIN task_dict td ON td.dictCode = t.classifycode
              LEFT JOIN `user` tu ON tu.userId=t.createUserId
              LEFT JOIN `user` performer ON performer.userId=t.performerId
              LEFT JOIN task_dict tasdic ON tasdic.dictCode = t.taskState
              where t.taskState = '002001' and (p.projectowner =#{userId}
                  or  (p.projectId in (select  projectid from  project_his_owner where formerowner = #{performerid} ))
              )
              <include refid="publishedTask_List_if"></include>
          ) a
    </if>
    <if test="sysrole != 'manager'">
      SELECT count(1) from (
          select t.taskid
          FROM task_info t
          INNER JOIN project_info p ON t.projectId= p.projectId
          <if test="sysrole != 'admin'">INNER JOIN project_user pu on pu.projectId = t. projectId
          </if>
          LEFT
          JOIN task_dict td ON td.dictCode = t.classifycode
          LEFT JOIN `user` tu ON tu.userId=t.createUserId
          LEFT JOIN `user` performer ON performer.userId=t.performerId
          LEFT JOIN task_dict tasdic ON tasdic.dictCode = t.taskState
          where t.taskState = '002001'
          <if test="sysrole != 'admin'">
              and  pu.member = #{userId}
            </if>
          <include refid="publishedTask_List_if"></include>
          group by t.taskid
      ) aa
    </if>

  </select>

  <sql id="myTask_List_if" >
    <if test="keyword != null and keyword != ''">
      and (
      t.tasktitle like concat("%",concat(#{keyword},"%")) or
      tu.username like concat("%",concat(#{keyword},"%")) or
      p.projectname like  concat("%",concat(#{keyword},"%")) or
      tasdic.dictDesc like  concat("%",concat(#{keyword},"%")) or
      td.dictDesc like  concat("%",concat(#{keyword},"%")) or
      t.taskdesc like  concat("%",concat(#{keyword},"%")) or
      t.comments like concat("%",concat(#{keyword},"%")) or
      p.note like concat("%",concat(#{keyword},"%")) or
      t.note like concat("%",concat(#{keyword},"%"))
      )
    </if>
    <if test="projectname != null and projectname != ''">
      and p.projectname like  concat("%",concat(#{projectname},"%"))
    </if>
    <if test="taskname != null and taskname != ''">
      and t.tasktitle like  concat("%",concat(#{taskname},"%"))
    </if>
    <if test="tasktype != null and tasktype != ''">
      and  t.classifycode = #{tasktype}
    </if>
    <if test="createuser != null and createuser != ''">
      and  tu.username like concat("%",concat(#{createuser},"%"))
    </if>
    <if test="performer != null and performer != ''">
      and  performer.username like concat("%",concat(#{performer},"%"))
    </if>
    <if test="taskstate != null and taskstate != ''">
      and   t.taskstate = #{taskstate}
    </if>
    <if test="pstarttime != null and pstarttime != '' and pendtime != null and pendtime != ''">
      and  t.createtime between #{pstarttime} and  #{pendtime}
    </if>
    <if test="pstarttime != null and pstarttime != '' and (pendtime == null or pendtime == '')">
      and  t.createtime <![CDATA[ >= ]]> #{pstarttime}
    </if>
    <if test="(pstarttime == null or pstarttime == '' ) and pendtime != null and pendtime != ''">
      and  t.createtime <![CDATA[ <= ]]>  #{pendtime}
    </if>
    <if test="fstarttime != null and fstarttime != '' and fendtime != null and fendtime != ''">
      and  t.finishdeadline between #{fstarttime} and  #{fendtime}
    </if>
    <if test="fstarttime != null and fstarttime != '' and (fendtime == null or fendtime == '')">
      and  t.finishdeadline <![CDATA[ >= ]]> #{fstarttime}
    </if>
    <if test="(fstarttime == null or fstarttime == '') and fendtime != null and fendtime != ''">
      and  t.finishdeadline <![CDATA[ <= ]]>  #{fendtime}
    </if>
    <if test="managerRemark != null and managerRemark != ''">
      and (t.comments like  concat("%",concat(#{managerRemark},"%")) or t.taskTitle like  concat("%",concat(#{managerRemark},"%")))
    </if>
  </sql>

  <!--获取我的任务列表-->
  <select id="getMyTaskList" resultType="map" parameterType="map" >
    SELECT * FROM(
    SELECT t.* ,template.annotationtype,p.projectowner,p.projectName,td.dictDesc AS classifyName,tu.userName AS createUserName ,00 as sort,
    performer.userName AS performerName,
    tasdic.dictDesc AS taskStateName
    FROM task_info t
    LEFT JOIN annotation_template template ON t.templateid = template.templateid
    INNER JOIN project_info p ON t.projectId= p.projectId
    INNER JOIN task_dict td ON td.dictCode = t.classifycode
    INNER JOIN `user` tu ON tu.userId=t.createUserId
    LEFT JOIN `user` performer ON performer.userId=t.performerId
    LEFT JOIN task_dict tasdic ON tasdic.dictCode = t.taskState
    WHERE taskState != '002007'
    AND t.performerId  = #{performerid,jdbcType=VARCHAR}
    <include refid="myTask_List_if"></include>
    union
    SELECT t.* ,template.annotationtype,p.projectowner,p.projectName,td.dictDesc AS classifyName,tu.userName AS createUserName ,11 as sort,
    performer.userName AS performerName,
    tasdic.dictDesc AS taskStateName
    FROM task_info t
    LEFT JOIN annotation_template template ON t.templateid = template.templateid
    INNER JOIN project_info p ON t.projectId= p.projectId
    INNER JOIN task_dict td ON td.dictCode = t.classifycode
    INNER JOIN `user` tu ON tu.userId=t.createUserId
    LEFT JOIN `user` performer ON performer.userId=t.performerId
    LEFT JOIN task_dict tasdic ON tasdic.dictCode = t.taskState
    WHERE taskState = '002005' and t.performerId != #{performerid}
    <if test="sysrole != 'admin'">
      AND ( p.projectowner = #{performerid} or
      (t.projectId IN (
      SELECT
      pu.projectid
      FROM
      project_user pu
      WHERE
      (pu.prolekey = 'pmanager' OR pu.prolekey = 'auditor' )
      AND pu.member = #{performerid,jdbcType=VARCHAR}
      ))
      )
    </if>

    <include refid="myTask_List_if"></include>
    ) aaa
    ORDER BY sort ASC, updateTime DESC ,SUBSTR(taskTitle FROM 1 FOR 9) ASC
    <if test="queryStart != null and pageSize != null and pageSize !=0">
      limit #{queryStart}, #{pageSize}
    </if>
  </select>
  <select id="getMyTaskListCounts" resultType="int" parameterType="map" >
    SELECT count(1)
    FROM (
    SELECT * FROM(
    SELECT t.* ,p.projectowner,p.projectName,td.dictDesc AS classifyName,tu.userName AS createUserName ,00 as sort,
    performer.userName AS performerName,
    tasdic.dictDesc AS taskStateName
    FROM task_info t
    LEFT JOIN project_info p ON t.projectId= p.projectId
    LEFT JOIN task_dict td ON td.dictCode = t.classifycode
    LEFT JOIN `user` tu ON tu.userId=t.createUserId
    LEFT JOIN `user` performer ON performer.userId=t.performerId
    LEFT JOIN task_dict tasdic ON tasdic.dictCode = t.taskState
    WHERE taskState != '002007'
    AND t.performerId  = #{performerid,jdbcType=VARCHAR}
    <include refid="myTask_List_if"></include>
    union
    SELECT t.* ,p.projectowner,p.projectName,td.dictDesc AS classifyName,tu.userName AS createUserName ,11 as sort,
    performer.userName AS performerName,
    tasdic.dictDesc AS taskStateName
    FROM task_info t
    LEFT JOIN project_info p ON t.projectId= p.projectId
    LEFT JOIN task_dict td ON td.dictCode = t.classifycode
    LEFT JOIN `user` tu ON tu.userId=t.createUserId
    LEFT JOIN `user` performer ON performer.userId=t.performerId
    LEFT JOIN task_dict tasdic ON tasdic.dictCode = t.taskState
    WHERE taskState = '002005' and t.performerId != #{performerid}
    <if test="sysrole != 'admin'">
      AND ( p.projectowner = #{performerid} or
      (t.projectId IN (
      SELECT
      pu.projectid
      FROM
      project_user pu
      WHERE
      (pu.prolekey = 'pmanager' OR pu.prolekey = 'auditor' )
      AND pu.member = #{performerid,jdbcType=VARCHAR}
      ))
      )
    </if>

    <include refid="myTask_List_if"></include>
    ) aaa

    ) a
  </select>
  <!--获取我的任务列表-->
  <select id="getMyTaskList1" resultType="map" parameterType="map" >
    SELECT * FROM(
        SELECT t.* ,p.projectowner,p.projectName,td.dictDesc AS classifyName,tu.userName AS createUserName ,00 as sort,
        performer.userName AS performerName,
        tasdic.dictDesc AS taskStateName
        FROM task_info t
        LEFT JOIN project_info p ON t.projectId= p.projectId
        LEFT JOIN task_dict td ON td.dictCode = t.classifycode
        LEFT JOIN `user` tu ON tu.userId=t.createUserId
        LEFT JOIN `user` performer ON performer.userId=t.performerId
        LEFT JOIN task_dict tasdic ON tasdic.dictCode = t.taskState
        WHERE taskState = '002002'
        AND t.performerId  = #{performerid,jdbcType=VARCHAR}
       <include refid="myTask_List_if"></include>
      union
        SELECT t.* ,p.projectowner,p.projectName,td.dictDesc AS classifyName,tu.userName AS createUserName ,11 as sort,
        performer.userName AS performerName,
        tasdic.dictDesc AS taskStateName
        FROM task_info t
        <if test="projectrole == 'auditor'">
          LEFT JOIN (SELECT p.projectId,projectowner,projectName FROM project_info p
                      INNER JOIN auditor_performer ap WHERE ap.auditorid = #{performerid}
          ) p ON t.projectId= p.projectId
        </if>
        <if test="projectrole != 'auditor'">
          LEFT JOIN project_info p ON t.projectId= p.projectId
        </if>
        LEFT JOIN task_dict td ON td.dictCode = t.classifycode
        LEFT JOIN `user` tu ON tu.userId=t.createUserId
        LEFT JOIN `user` performer ON performer.userId=t.performerId
        LEFT JOIN task_dict tasdic ON tasdic.dictCode = t.taskState
        WHERE
          taskState != '002001' and taskState != '002002'
          and taskState != '002007'
      <if test="sysrole == 'user' and projectrole != 'pmanager'">
          AND t.performerId  = #{performerid,jdbcType=VARCHAR}
        </if>
        <if test="sysrole == 'admin'">
          AND (t.performerId  = #{performerid,jdbcType=VARCHAR} or taskState = '002005')
        </if>
        <if test="sysrole == 'manager'">
          AND (t.performerId  = #{performerid,jdbcType=VARCHAR}   or ( p.projectowner = #{performerid} and taskState = '002005')
          or  (p.projectId in (select  projectid from  project_his_owner where formerowner = #{performerid} ) and taskState = '002005'))
        </if>

        <if test="projectrole == 'pmanager'">
          AND (t.performerId = #{performerid,jdbcType=VARCHAR}
            or (t.projectId IN (
                    SELECT
                      pu.projectid
                    FROM
                      project_user pu
                    WHERE
                      pu.prolekey = 'pmanager'
                      AND pu.member = #{performerid,jdbcType=VARCHAR}
            ) and taskState = '002005' )
          )
        </if>
        <include refid="myTask_List_if"></include>
    ) aaa
    ORDER BY sort ASC, updateTime DESC ,SUBSTR(taskTitle FROM 1 FOR 9) ASC
    <if test="queryStart != null and pageSize != null and pageSize !=0">
      limit #{queryStart}, #{pageSize}
    </if>
  </select>

  <select id="getMyTaskListCounts1" resultType="int" parameterType="map" >
    SELECT count(1)
    FROM (
          SELECT * FROM(
          SELECT t.* ,p.projectowner,p.projectName,td.dictDesc AS classifyName,tu.userName AS createUserName ,
          performer.userName AS performerName,
          tasdic.dictDesc AS taskStateName
          FROM task_info t
          LEFT JOIN project_info p ON t.projectId= p.projectId
          LEFT JOIN task_dict td ON td.dictCode = t.classifycode
          LEFT JOIN `user` tu ON tu.userId=t.createUserId
          LEFT JOIN `user` performer ON performer.userId=t.performerId
          LEFT JOIN task_dict tasdic ON tasdic.dictCode = t.taskState
          WHERE taskState = '002002'
          AND t.performerId  = #{performerid,jdbcType=VARCHAR}
          <include refid="myTask_List_if"></include>
          union
          SELECT t.* ,p.projectowner,p.projectName,td.dictDesc AS classifyName,tu.userName AS createUserName ,
          performer.userName AS performerName,
          tasdic.dictDesc AS taskStateName
          FROM task_info t
          <if test="projectrole == 'auditor'">
            LEFT JOIN (SELECT p.projectId,projectowner,projectName FROM project_info p
            INNER JOIN auditor_performer ap WHERE ap.auditorid = #{performerid}
            ) p ON t.projectId= p.projectId
          </if>
          <if test="projectrole != 'auditor'">
            LEFT JOIN project_info p ON t.projectId= p.projectId
          </if>
          LEFT JOIN task_dict td ON td.dictCode = t.classifycode
          LEFT JOIN `user` tu ON tu.userId=t.createUserId
          LEFT JOIN `user` performer ON performer.userId=t.performerId
          LEFT JOIN task_dict tasdic ON tasdic.dictCode = t.taskState
          WHERE
            taskState != '002001' and taskState != '002002'
            and taskState != '002007'
          <if test="sysrole == 'user' and projectrole != 'pmanager'">
            AND t.performerId  = #{performerid,jdbcType=VARCHAR}
          </if>
          <if test="sysrole == 'admin'">
            AND (t.performerId  = #{performerid,jdbcType=VARCHAR} or taskState = '002005')
          </if>
          <if test="sysrole == 'manager'">
            AND (t.performerId  = #{performerid,jdbcType=VARCHAR}   or ( p.projectowner = #{performerid} and taskState = '002005')
            or  (p.projectId in (select  projectid from  project_his_owner where formerowner = #{performerid} ) and taskState = '002005'))
          </if>

          <if test="projectrole == 'pmanager'">
            AND (t.performerId = #{performerid,jdbcType=VARCHAR}
                or (t.projectId IN (
                  SELECT
                  pu.projectid
                  FROM
                  project_user pu
                  WHERE
                  pu.prolekey = 'pmanager'
                  AND pu.member = #{performerid,jdbcType=VARCHAR}
                ) and taskState = '002005' )
            )
          </if>
          <include refid="myTask_List_if"></include>
          ) aaa

    ) a
  </select>

  <sql id="relateTask_List_if" >
    <if test="keyword != null and keyword != ''">
      and (
      t.tasktitle like concat("%",concat(#{keyword},"%")) or
      tu.username like concat("%",concat(#{keyword},"%")) or
      p.projectname like  concat("%",concat(#{keyword},"%")) or
      tasdic.dictDesc like  concat("%",concat(#{keyword},"%")) or
      td.dictDesc like  concat("%",concat(#{keyword},"%")) or
      t.taskdesc like  concat("%",concat(#{keyword},"%")) or
      t.comments like concat("%",concat(#{keyword},"%")) or
      p.note like concat("%",concat(#{keyword},"%")) or
      t.note like concat("%",concat(#{keyword},"%"))
      )
    </if>
    <if test="projectname != null and projectname != ''">
      and p.projectname like  concat("%",concat(#{projectname},"%"))
    </if>
    <if test="taskname != null and taskname != ''">
      and t.tasktitle like  concat("%",concat(#{taskname},"%"))
    </if>
    <if test="tasktype != null and tasktype != ''">
      and  t.classifycode = #{tasktype}
    </if>
    <if test="createuser != null and createuser != ''">
      and  tu.username like concat("%",concat(#{createuser},"%"))
    </if>
    <if test="performer != null and performer != ''">
      and  performer.username like concat("%",concat(#{performer},"%"))
    </if>
    <if test="taskstate != null and taskstate != ''">
      and   t.taskstate = #{taskstate}
    </if>
    <if test="pstarttime != null and pstarttime != '' and pendtime != null and pendtime != ''">
      and  t.createtime between #{pstarttime} and  #{pendtime}
    </if>
    <if test="pstarttime != null and pstarttime != '' and (pendtime == null or pendtime == '')">
      and  t.createtime <![CDATA[ >= ]]> #{pstarttime}
    </if>
    <if test="(pstarttime == null or pstarttime == '' ) and pendtime != null and pendtime != ''">
      and  t.createtime <![CDATA[ <= ]]>  #{pendtime}
    </if>
    <if test="fstarttime != null and fstarttime != '' and fendtime != null and fendtime != ''">
      and  t.finishdeadline between #{fstarttime} and  #{fendtime}
    </if>
    <if test="fstarttime != null and fstarttime != '' and (fendtime == null or fendtime == '')">
      and  t.finishdeadline <![CDATA[ >= ]]> #{fstarttime}
    </if>
    <if test="(fstarttime == null or fstarttime == '') and fendtime != null and fendtime != ''">
      and  t.finishdeadline <![CDATA[ <= ]]>  #{fendtime}
    </if>
  </sql>
  <!--相关任务-->
  <select id="getRelatedTaskList" resultType="map" >
    SELECT t.*  ,template.annotationtype,p.projectowner,p.projectName,td.dictDesc AS classifyName,tu.userName AS createUserName ,
    tasdic.dictDesc AS taskStateName,performer.userName AS performerUserName
    FROM task_info t
    LEFT JOIN annotation_template template ON t.templateid = template.templateid
    INNER JOIN project_info p ON t.projectId= p.projectId
    LEFT JOIN task_dict td ON td.dictCode = t.classifycode
    INNER JOIN `user` tu ON tu.userId=t.createUserId
    LEFT JOIN `user` performer ON performer.userId=t.performerId
    LEFT JOIN task_dict tasdic ON tasdic.dictCode = t.taskState
    WHERE
    taskState != '002001' AND taskState != '002007'  and taskState != '002005'
    AND t.performerId  != #{performerid,jdbcType=VARCHAR}
    <if test="sysrole == 'manager'">
      and ((t.taskownerid = #{performerid,jdbcType = VARCHAR} OR t.taskownerid in
      (SELECT pho.formerowner FROM project_his_owner pho WHERE pho.projectid = t.projectId)))

    </if>
    <if test="projectrole == 'pmanager'">
      and t.projectId in (
          SELECT pu.projectid
          FROM project_user pu
          WHERE pu.prolekey = 'pmanager'
          AND pu.member = #{performerid}
      )
    </if>
    <if test="sysrole == 'admin'"><!--用户是admin，需要排除经办人是admin并且创建人是admin状态是已完成的任务-->
      and taskState != '002005'
    </if>

    <include refid="relateTask_List_if"></include>
   <if test="sysrole == 'manager' "><!--新增部分：manager创建的项目-->
        union
         SELECT
         t.*,template.annotationtype,p.projectowner,p.projectName,td.dictDesc AS classifyName,tu.userName AS createUserName,
         tasdic.dictDesc AS taskStateName,performer.userName AS performerUserName
         FROM task_info t
         LEFT JOIN annotation_template template ON t.templateid = template.templateid
         INNER JOIN (
              SELECT projectId,projectowner,projectName,note FROM project_info WHERE projectowner = #{performerid,jdbcType=VARCHAR}
            ) p ON t.projectId = p.projectId
         LEFT JOIN task_dict td ON td.dictCode = t.classifycode
         INNER JOIN `user` tu ON tu.userId = t.createUserId
         LEFT JOIN `user` performer ON performer.userId = t.performerId
         LEFT JOIN task_dict tasdic ON tasdic.dictCode = t.taskState
         WHERE
         taskState != '002001'
         AND taskState != '002007'  and taskState != '002005'
         AND t.performerId != #{performerid,jdbcType=VARCHAR}
        <include refid="relateTask_List_if"></include>
    </if>
    ORDER BY updateTime DESC,createTime DESC,taskTitle ASC
    <if test="queryStart != null and pageSize != null and pageSize !=0">
      limit #{queryStart}, #{pageSize}
    </if>
  </select>

  <!--相关任务-->
  <select id="getRelatedTaskListCounts" parameterType="map" resultType="int" >
    select count(1) from (
    SELECT t.*  ,p.projectowner,p.projectName,td.dictDesc AS classifyName,tu.userName AS createUserName ,
    tasdic.dictDesc AS taskStateName,performer.userName AS performerUserName
    FROM task_info t
    INNER JOIN project_info p ON t.projectId= p.projectId
    LEFT JOIN task_dict td ON td.dictCode = t.classifycode
    INNER JOIN `user` tu ON tu.userId=t.createUserId
    LEFT JOIN `user` performer ON performer.userId=t.performerId
    LEFT JOIN task_dict tasdic ON tasdic.dictCode = t.taskState
    WHERE
    taskState != '002001' AND taskState != '002007'  and taskState != '002005'
    AND t.performerId  != #{performerid,jdbcType=VARCHAR}
    <if test="sysrole == 'manager'">
      and ((t.taskownerid = #{performerid,jdbcType = VARCHAR} OR t.taskownerid in
      (SELECT pho.formerowner FROM project_his_owner pho WHERE pho.projectid = t.projectId)))

    </if>
    <if test="projectrole == 'pmanager'">
      and t.projectId in (
      SELECT pu.projectid
      FROM project_user pu
      WHERE pu.prolekey = 'pmanager'
      AND pu.member = #{performerid}
      )
    </if>
    <if test="sysrole == 'admin'"><!--用户是admin，需要排除经办人是admin并且创建人是admin状态是已完成的任务-->
      and taskState != '002005'
    </if>

    <include refid="relateTask_List_if"></include>
    <if test="sysrole == 'manager' "><!--新增部分：manager创建的项目-->
      union
      SELECT
      t.*,p.projectowner,p.projectName,td.dictDesc AS classifyName,tu.userName AS createUserName,
      tasdic.dictDesc AS taskStateName,performer.userName AS performerUserName
      FROM task_info t
      INNER JOIN (
      SELECT projectId,projectowner,projectName,note FROM project_info WHERE projectowner = #{performerid,jdbcType=VARCHAR}
      ) p ON t.projectId = p.projectId
      LEFT JOIN task_dict td ON td.dictCode = t.classifycode
      INNER JOIN `user` tu ON tu.userId = t.createUserId
      LEFT JOIN `user` performer ON performer.userId = t.performerId
      LEFT JOIN task_dict tasdic ON tasdic.dictCode = t.taskState
      WHERE
      taskState != '002001'
      AND taskState != '002007'  and taskState != '002005'
      AND t.performerId != #{performerid,jdbcType=VARCHAR}
      <include refid="relateTask_List_if"></include>
    </if>
      ) a

  </select>

  <select id="getTaskByProjectName" resultMap="BaseResultMap">
    SELECT taskId
    FROM  task_info t
    WHERE  t.taskTitle = #{taskname,jdbcType=VARCHAR}
    AND  t.projectId = #{projcetid,jdbcType=VARCHAR}
    AND  (
      t.taskownerid = #{taskowner,jdbcType=VARCHAR}
      or t.taskownerid in
    (SELECT pho.formerowner FROM project_his_owner pho WHERE pho.projectid = t.projectId)
    )
    AND t.taskState != '002007'
  </select>

  <!--根据taskid查询任务详情-->
  <select id="getTaskInfo" resultType="java.util.Map" parameterType="java.lang.String" >
    SELECT
    task.taskid,task.tasktitle,task.classifycode,
    task.tasktype,td3.dictDesc as tasktypename,
    td1.dictDesc AS classifyname,task.taskState,
    task.begintime,td2.dictDesc AS taskstatename,
    task.projectid,p.projectname,
    p.projectowner,task.templateid,
    annot.templatename,task.taskdatanumber,
    task.createuserid,tu.username AS createusername,
    task.taskownerid,tu1.username AS taskownerUserName,
    task.performerid,task.prevperformerid,
    tu2.username AS performerusername,tu3.userName AS prevperformerusername,
    task.taskdesc,task.createTime,
    task.receiveTime,task.updateTime,task.finishdeadline,
    task.finishTime,task.pausetime,task.costtime,task.resultDesc,
    task.score,task.comments,task.version,task.totalwords,task.audittimes,
    task.callbacktimes,task.resultdataset,task.note,
	pm.pmanager
    FROM
    task_info task
    LEFT JOIN `user` tu ON task.createUserId = tu.userId
    LEFT JOIN project_info p ON task.projectId = p.projectId
    LEFT JOIN annotation_template annot ON task.templateid = annot.templateid
    LEFT JOIN task_dict td1 ON task.classifycode = td1.dictCode
    LEFT JOIN task_dict td2 ON task.taskstate = td2.dictCode
    LEFT JOIN task_dict td3 ON task.tasktype = td3.dictCode
    LEFT JOIN `user` tu1 ON task.taskownerid = tu1.userId
    LEFT JOIN `user` tu2 ON task.performerId = tu2.userId
    LEFT JOIN `user` tu3 ON task.prevperformerid = tu3.userid
	LEFT JOIN (
		SELECT pu.member as pmanager,pu.projectid FROM project_user pu INNER JOIN project_info pinfo ON pu.projectid = pinfo.projectid
		WHERE pu.prolekey = 'pmanager'
	) pm ON pm.projectid = p.projectid
    where task.taskId =  #{taskId,jdbcType=VARCHAR}
  </select>

  <!--批量更新任务为删除状态-->
  <update id="updateTaskToDeleteStateByIds" parameterType="java.util.List">
    UPDATE task_info SET
    taskState='002007',deletetype='delete'
    WHERE taskId IN
    <foreach collection="list"  item="item" open="("
             separator="," close=")">
      #{item}
    </foreach>
  </update>
  <!--批量更新任务为删除状态-->
  <update id="updateTaskToInvalidStateByIds" parameterType="java.util.List">
    UPDATE task_info SET
    taskState='002007',deletetype='invalidate'
    WHERE taskId IN
    <foreach collection="list"  item="item" open="("
             separator="," close=")">
      #{item}
    </foreach>
  </update>

  <!--用户直接点击开始按钮执行任务或者先点击领取任务按钮-->
  <update id="updateTaskState" parameterType="map" >
    update task_info
    <set >
      <if test="taskstate != null and taskstate !=''" >
        <if test="taskstate == '002002'">
          performerid = #{performerid,jdbcType=VARCHAR},
          receivetime = #{receivetime,jdbcType=VARCHAR},
        </if>
        <if test="taskstate == '002003'">
          <if test="performerid != null">
            performerid = #{performerid,jdbcType=VARCHAR},
          </if>
          <if test="receivetime != null">
            receivetime = #{receivetime,jdbcType=VARCHAR},
          </if>
          <if test="begintime != null">
            begintime = #{begintime,jdbcType=VARCHAR},
          </if>
          pausetime = #{pausetime,jdbcType=VARCHAR},
        </if>
        <if test="taskstate == '002004'">
          costtime = #{costtime},
          pausetime = #{pausetime},
        </if>
        taskstate = #{taskstate,jdbcType=VARCHAR}
      </if>

    </set>
    where taskId = #{taskid,jdbcType=VARCHAR} and version = #{version,jdbcType=VARCHAR}
  </update>

  <!--批量更新任务为已领取（召回）-->
  <update id="updateTaskToReceiveStateByIds" parameterType="java.util.List">
    UPDATE task_info SET
    taskState='002002'
    WHERE taskId IN
    <foreach collection="list"  item="item" open="("
             separator="," close=")">
      #{item}
    </foreach>
  </update>

  <!--批量更新任务状态为已关闭-->
  <update id="updateTaskToCloseStateByIds" parameterType="java.util.List">
    UPDATE task_info SET
    taskState='002006'
    WHERE taskId IN
    <foreach collection="list"  item="item" open="("
             separator="," close=")">
      #{item}
    </foreach>
  </update>
  <!--更新任务状态-->
  <update id="updateTaskInfoState" parameterType="map">
    UPDATE task_info SET
    taskstate= #{taskstate}
    <if test="taskdesc != null">
      ,taskdesc = #{taskdesc}
    </if>
    <if test="note != null">
      ,note = #{note}
    </if>
    <if test="resultdesc != null">
      ,resultdesc = #{resultdesc}
    </if>
    <if test="comments != null">
      ,comments = #{comments}
    </if>
    <if test="callbacktime != null">
      ,callbacktime = IFNULL(callbacktime,0) +1
    </if>
    <if test="costtime != null" >
      ,costtime= #{costtime,jdbcType=VARCHAR}
    </if>
    <if test="finishtime != null" >
      ,finishtime= #{finishtime}
    </if>
    WHERE taskid = #{taskid}
  </update>

  <update id="updateTaskCostTimeByTaskId" parameterType="map" >
    update task_info
    <set>
      <if test="pausetime != null" >
        pausetime= #{pausetime,jdbcType=VARCHAR},
      </if>
      <if test="costtime != null" >
        costtime= #{costtime,jdbcType=VARCHAR},
      </if>
      <if test="processedwords !=null">
        processedwords = #{processedwords,jdbcType=INTEGER},
      </if>
    </set>
    where  taskid = #{taskid,jdbcType=VARCHAR}
  </update>

  <!--获取我的任务列表-->
  <select id="searchTask" resultType="map" parameterType="map" >
    SELECT t.* ,p.projectowner,p.projectname,td.dictdesc AS classifyname,tu.username AS createusername
    ,tu1.username AS taskownername ,
    performer.username AS performername,
    tasdic.dictdesc AS taskstatename,
    performer.userId AS userid
    FROM task_info t
    LEFT JOIN project_info p ON t.projectId= p.projectId
    LEFT JOIN task_dict td ON td.dictCode = t.classifycode
    LEFT JOIN `user` tu ON tu.userId=t.createUserId
    LEFT JOIN `user` tu1 ON tu1.userId=t.taskownerid
    LEFT JOIN `user` performer ON performer.userId=t.performerId
    LEFT JOIN task_dict tasdic ON tasdic.dictCode = t.taskState
    WHERE
    t.taskState != '002007' and p.projectstate != '006000'

    <if test="role == 'user'">
      AND (
      t.performerId  = #{performerid,jdbcType=VARCHAR} or t.performerId is NULL
      or (t.projectId IN (
      SELECT
      pu.projectid
      FROM
      project_user pu
      WHERE
      (pu.prolekey = 'pmanager' OR pu.prolekey = 'auditor' )
      AND pu.member = #{performerid,jdbcType=VARCHAR}
      ))
      )
    </if>

    <if test="role == 'manager'">
      AND (
      t.performerId  = #{performerid,jdbcType=VARCHAR}
       or p.projectowner = #{performerid}
      )

    </if>
    <if test="keyword != null and keyword != ''">
      and (
      t.tasktitle like concat("%",concat(#{keyword},"%")) or
      tu.username like concat("%",concat(#{keyword},"%")) or
      p.projectname like  concat("%",concat(#{keyword},"%")) or
      tasdic.dictDesc like  concat("%",concat(#{keyword},"%")) or
      td.dictDesc like  concat("%",concat(#{keyword},"%")) or
      t.taskdesc like  concat("%",concat(#{keyword},"%")) or
      t.comments like concat("%",concat(#{keyword},"%")) or
      p.note like concat("%",concat(#{keyword},"%")) or
      t.note like concat("%",concat(#{keyword},"%"))
      )
    </if>
    <if test="projectname != null and projectname != ''">
      and p.projectName like  concat("%",concat(#{projectname},"%"))
    </if>
    <if test="taskname != null and taskname != ''">
      and t.taskTitle like  concat("%",concat(#{taskname},"%"))
    </if>
    <if test="tasktype != null and tasktype != ''">
      and  t.classifycode = #{tasktype}
    </if>
    <if test="createuser != null and createuser != ''">
      and  tu.userName like concat("%",concat(#{createuser},"%"))
    </if>
    <if test="performer != null and performer != ''">
      and  performer.userName like concat("%",concat(#{performer},"%"))
    </if>
    <if test="taskstate != null and taskstate != ''">
      and   t.taskState = #{taskstate}
    </if>
    <if test="pstarttime != null and pstarttime != '' and pendtime != null and pendtime != ''">
      and  t.createTime between #{pstarttime} and  #{pendtime}
    </if>
    <if test="pstarttime != null and pstarttime != '' and (pendtime == null or pendtime == '')">
      and  t.createTime <![CDATA[ >= ]]> #{pstarttime}
    </if>
    <if test="(pstarttime == null or pstarttime == '' ) and pendtime != null and pendtime != ''">
      and  t.createTime <![CDATA[ <= ]]>  #{pendtime}
    </if>
    <if test="fstarttime != null and fstarttime != '' and fendtime != null and fendtime != ''">
      and  t.finishDeadline between #{fstarttime} and  #{fendtime}
    </if>
    <if test="fstarttime != null and fstarttime != '' and (fendtime == null or fendtime == '')">
      and  t.finishDeadline <![CDATA[ >= ]]> #{fstarttime}
    </if>
    <if test="(fstarttime == null or fstarttime == '') and fendtime != null and fendtime != ''">
      and  t.finishDeadline <![CDATA[ <= ]]>  #{fendtime}
    </if>
    <if test="managerRemark != null and managerRemark != ''">
      and (t.managerRemark like  concat("%",concat(#{managerRemark},"%")) or t.taskTitle like  concat("%",concat(#{managerRemark},"%")))
    </if>
    ORDER BY t.updateTime DESC,t.createTime DESC,t.taskTitle ASC
    <if test="queryStart != null and pageSize != null and pageSize !=0">
      limit #{queryStart}, #{pageSize}
    </if>
  </select>

  <!--获取我的任务列表-->
  <select id="statisticsDimensionProject" resultType="map" parameterType="map" >
    SELECT COUNT(ta.taskId) AS tasknumber, ta.projectname,ta.projectid FROM(
    SELECT * FROM(
    SELECT t.*,p.projectName,tu.userName AS performerName ,td.dictDesc AS classifyname,
    tdc.dictDesc AS priorityname,tdct.dictDesc AS taskstatename,tue.userName AS createusername

    FROM task t
    LEFT JOIN project p ON p.projectId = t.projectId
    LEFT JOIN task_user tu ON tu.userId = t.performerId
    LEFT JOIN task_dict td ON td.dictCode = t.classifyId
    LEFT JOIN task_user tus ON tus.userId = t.createUserId
    LEFT JOIN task_dict tdc ON tdc.dictCode= t.priorityId
    LEFT JOIN task_dict tdct ON tdct.dictCode = t.taskState
    LEFT JOIN task_user tue ON tue.userId = t.createUserId
    t.taskState != '002007' and p.projectstate != '006000'
    ) sdt
    WHERE 1=1
    <if test="role == 'user'">
      AND (
      t.performerId  = #{performerid,jdbcType=VARCHAR} or t.performerId is NULL
      )
    </if>

    <if test="role == 'manager'">
      AND (
      t.performerId  = #{performerid,jdbcType=VARCHAR}
      or ((t.taskownerid = #{performerid,jdbcType=VARCHAR} OR t.taskownerid in
      (SELECT pho.formerowner FROM project_his_owner pho WHERE pho.projectid = t.projectId)))
      )

    </if>
    <if test="keyword != null and keyword != ''">
      and (
      t.tasktitle like concat("%",concat(#{keyword},"%")) or
      tu.username like concat("%",concat(#{keyword},"%")) or
      p.projectname like  concat("%",concat(#{keyword},"%")) or
      tasdic.dictDesc like  concat("%",concat(#{keyword},"%")) or
      td.dictDesc like  concat("%",concat(#{keyword},"%")) or
      t.taskdesc like  concat("%",concat(#{keyword},"%")) or
      t.comments like concat("%",concat(#{keyword},"%")) or
      p.note like concat("%",concat(#{keyword},"%")) or
      t.note like concat("%",concat(#{keyword},"%"))
      )
    </if>
    <if test="projectname != null and projectname != ''">
      and p.projectName like  concat("%",concat(#{projectname},"%"))
    </if>
    <if test="taskname != null and taskname != ''">
      and t.taskTitle like  concat("%",concat(#{taskname},"%"))
    </if>
    <if test="tasktype != null and tasktype != ''">
      and  t.classifycode = #{tasktype}
    </if>
    <if test="createuser != null and createuser != ''">
      and  tu.userName like concat("%",concat(#{createuser},"%"))
    </if>
    <if test="performer != null and performer != ''">
      and  performer.userName like concat("%",concat(#{performer},"%"))
    </if>
    <if test="taskstate != null and taskstate != ''">
      and   t.taskState = #{taskstate}
    </if>
    <if test="pstarttime != null and pstarttime != '' and pendtime != null and pendtime != ''">
      and  t.createTime between #{pstarttime} and  #{pendtime}
    </if>
    <if test="pstarttime != null and pstarttime != '' and (pendtime == null or pendtime == '')">
      and  t.createTime <![CDATA[ >= ]]> #{pstarttime}
    </if>
    <if test="(pstarttime == null or pstarttime == '' ) and pendtime != null and pendtime != ''">
      and  t.createTime <![CDATA[ <= ]]>  #{pendtime}
    </if>
    <if test="fstarttime != null and fstarttime != '' and fendtime != null and fendtime != ''">
      and  t.finishDeadline between #{fstarttime} and  #{fendtime}
    </if>
    <if test="fstarttime != null and fstarttime != '' and (fendtime == null or fendtime == '')">
      and  t.finishDeadline <![CDATA[ >= ]]> #{fstarttime}
    </if>
    <if test="(fstarttime == null or fstarttime == '') and fendtime != null and fendtime != ''">
      and  t.finishDeadline <![CDATA[ <= ]]>  #{fendtime}
    </if>
    <if test="managerRemark != null and managerRemark != ''">
      and (t.managerRemark like  concat("%",concat(#{managerRemark},"%")) or t.taskTitle like  concat("%",concat(#{managerRemark},"%")))
    </if>
    ORDER BY t.updateTime DESC,t.createTime DESC,t.taskTitle ASC
    <if test="queryStart != null and pageSize != null and pageSize !=0">
      limit #{queryStart}, #{pageSize}
    </if>
    )ta
    GROUP BY  ta.projectId
  </select>

  <!--进入标注页面获取任务详情-->
  <select id="getAnnotationTaskInfo" resultType="java.util.Map" parameterType="java.lang.String" >
    SELECT
    ti.tasktitle,ti.taskstate,ti.costtime,ti.begintime,ti.pausetime,ti.createuserid,ti.performerid,ti.classifycode,ti.projectid,
    ti.tasktype,ti.totalwords,ti.processedwords
    FROM  task_info ti
    where ti.taskId =  #{taskid,jdbcType=VARCHAR}
  </select>



  <!--今日概览==统计任务数据用sql-->
  <select id="statisticSearchTask" resultType="map" parameterType="map" >
    SELECT t.* ,p.projectowner,p.projectname,td.dictdesc AS classifyname,tu.username AS createusername
    ,tu1.username AS taskownername ,
    performer.username AS performername,
    tasdic.dictdesc AS taskstatename,
    performer.userId AS userid
    FROM task_info t
    LEFT JOIN project_info p ON t.projectId= p.projectId
    LEFT JOIN task_dict td ON td.dictCode = t.classifycode
    LEFT JOIN `user` tu ON tu.userId=t.createUserId
    LEFT JOIN `user` tu1 ON tu1.userId=t.taskownerid
    LEFT JOIN `user` performer ON performer.userId=t.performerId
    LEFT JOIN task_dict tasdic ON tasdic.dictCode = t.taskState
    WHERE 1=1
    AND  p.projectstate != '006000'
    <if test="role != null and role == 'user'">
      AND (
      t.performerId  = #{performerid,jdbcType=VARCHAR} or t.performerId is NULL
      )
    </if>
    <if test="projectid != null">
      AND  t.projectid = #{projectid}
    </if>
    <if test="role == 'manager'">
      AND (
      t.performerId  = #{performerid,jdbcType=VARCHAR}
      or ((t.taskownerid = #{performerid,jdbcType=VARCHAR} OR t.taskownerid in
      (SELECT pho.formerowner FROM project_his_owner pho WHERE pho.projectid = t.projectId)))
      )
    </if>
    <if test="starttime != null and starttime != '' and endtime != null and endtime != ''">
      and  t.createTime between #{starttime} and  #{endtime}
    </if>
    <if test="starttime != null and starttime != '' and (endtime == null or endtime == '')">
      and  t.createTime <![CDATA[ >= ]]> #{starttime}
    </if>
    <if test="(starttime == null or starttime == '' ) and endtime != null and endtime != ''">
      and  t.createTime <![CDATA[ <= ]]>  #{endtime}
    </if>
    ORDER BY t.updateTime DESC,t.createTime DESC
  </select>

  <select id="pManagerStatisticTaskSearch" parameterType="map" resultType="map">
    SELECT t.* ,p.projectowner,p.projectname,td.dictdesc AS classifyname,tu.username AS createusername
    ,tu1.username AS taskownername ,
    performer.username AS performername,
    tasdic.dictdesc AS taskstatename,
    performer.userId AS userid
    FROM task_info t
    LEFT JOIN project_info p ON t.projectId= p.projectId
    LEFT JOIN task_dict td ON td.dictCode = t.classifycode
    LEFT JOIN `user` tu ON tu.userId=t.createUserId
    LEFT JOIN `user` tu1 ON tu1.userId=t.taskownerid
    LEFT JOIN `user` performer ON performer.userId=t.performerId
    LEFT JOIN task_dict tasdic ON tasdic.dictCode = t.taskState
    WHERE 1=1
    AND  p.projectstate != '006000'
    <if test="role == 'user'">
      AND (
      t.performerid  = #{performerid,jdbcType=VARCHAR} or t.performerId is NULL
      )
    </if>
    AND  t.projectid IN
    <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
      #{id}
    </foreach>
    <if test="role == 'manager'">
      AND (
      t.performerId  = #{performerid,jdbcType=VARCHAR}
      or ((t.taskownerid = #{performerid,jdbcType=VARCHAR} OR t.taskownerid in
      (SELECT pho.formerowner FROM project_his_owner pho WHERE pho.projectid = t.projectId)))
      )
    </if>
    <if test="starttime != null and starttime != '' and endtime != null and endtime != ''">
      and  t.createTime between #{starttime} and  #{endtime}
    </if>
    <if test="starttime != null and starttime != '' and (endtime == null or endtime == '')">
      and  t.createTime <![CDATA[ >= ]]> #{starttime}
    </if>
    <if test="(starttime == null or starttime == '' ) and endtime != null and endtime != ''">
      and  t.createTime <![CDATA[ <= ]]>  #{endtime}
    </if>
    ORDER BY t.updateTime DESC,t.createTime DESC
  </select>

  <select id="adminStatisticTaskSearch" parameterType="map" resultType="map">
    SELECT t.* ,p.projectowner,p.projectname,td.dictdesc AS classifyname,tu.username AS createusername
    ,tu1.username AS taskownername ,
    performer.username AS performername,
    tasdic.dictdesc AS taskstatename,
    performer.userId AS userid
    FROM task_info t
    LEFT JOIN project_info p ON t.projectId= p.projectId
    LEFT JOIN task_dict td ON td.dictCode = t.classifycode
    LEFT JOIN `user` tu ON tu.userId=t.createUserId
    LEFT JOIN `user` tu1 ON tu1.userId=t.taskownerid
    LEFT JOIN `user` performer ON performer.userId=t.performerId
    LEFT JOIN task_dict tasdic ON tasdic.dictCode = t.taskState
    WHERE 1=1
    AND  p.projectstate != '006000'
    <if test="role == 'user'">
      AND (
      t.performerid  = #{performerid,jdbcType=VARCHAR} or t.performerId is NULL
      )
    </if>
    <if test="starttime != null and starttime != '' and endtime != null and endtime != ''">
      and  t.createTime between #{starttime} and  #{endtime}
    </if>
    <if test="starttime != null and starttime != '' and (endtime == null or endtime == '')">
      and  t.createTime <![CDATA[ >= ]]> #{starttime}
    </if>
    <if test="(starttime == null or starttime == '' ) and endtime != null and endtime != ''">
      and  t.createTime <![CDATA[ <= ]]>  #{endtime}
    </if>
    ORDER BY t.updateTime DESC,t.createTime DESC
  </select>

</mapper>