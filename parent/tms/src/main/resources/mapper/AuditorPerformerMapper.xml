<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blcultra.dao.AuditorPerformerMapper" >
  <resultMap id="BaseResultMap" type="com.blcultra.model.AuditorPerformer" >
    <result column="auditorid" property="auditorid" jdbcType="VARCHAR" />
    <result column="performerid" property="performerid" jdbcType="VARCHAR" />
    <result column="projectid" property="projectid" jdbcType="VARCHAR" />
  </resultMap>
  <!--批量插入-->
  <insert id="batchInsert" parameterType="java.util.List">
    insert into auditor_performer
    values
    <foreach collection ="list" item="item" index= "index" separator =",">
      (
      #{item.auditorid,jdbcType=VARCHAR},
      #{item.performerid,jdbcType=VARCHAR},
      #{item.projectid,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>


  <insert id="insert" parameterType="com.blcultra.model.AuditorPerformer" >
    insert into auditor_performer (auditorid, performerid, projectid
      )
    values (#{auditorid,jdbcType=VARCHAR}, #{performerid,jdbcType=VARCHAR}, #{projectid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.blcultra.model.AuditorPerformer" >
    insert into auditor_performer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="auditorid != null" >
        auditorid,
      </if>
      <if test="performerid != null" >
        performerid,
      </if>
      <if test="projectid != null" >
        projectid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="auditorid != null" >
        #{auditorid,jdbcType=VARCHAR},
      </if>
      <if test="performerid != null" >
        #{performerid,jdbcType=VARCHAR},
      </if>
      <if test="projectid != null" >
        #{projectid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <!--根据项目id查询审核和被审核人信息-->
  <select id="selectAuditorandPerformerByProjectid" parameterType="java.lang.String" resultType="map">
    select ap.auditorid,audituser.username as auditorname,ap.performerid,performer.username as performername
    FROM auditor_performer ap
    INNER JOIN `user` audituser ON audituser.userid = ap.auditorid
    INNER JOIN `user` performer ON performer.userid = ap.performerid
    WHERE projectid = #{projectid}
  </select>


  <delete id="deleteByProjectid"  parameterType="java.lang.String" >
      DELETE FROM auditor_performer WHERE projectid = #{projectid}
  </delete>

</mapper>